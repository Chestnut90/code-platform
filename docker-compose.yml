version: '3.0'

volumes:
  code_platform_postgres_dev:


services:
  postgres:
    container_name: code_platform_postgres
    image: postgres:latest
    volumes:
      - code_platform_postgres_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
      # django에서 권장하는 환경 세팅하기.

  redis:
    container_name: code_platform_redis
    image: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  rabbitmq:
    container_name: code_platform_rabbitmq
    image: rabbitmq:3.11.13-management-alpine
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_USER}
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_UI_PORT}:${RABBITMQ_UI_PORT}" # ui

  nginx:
    container_name: code_platform_nginx
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./code-platform.conf:/etc/nginx/conf.d/code-platform.conf
      - ./static_files/files/static:/staticfiles
    depends_on:
      - django

  django:
    container_name: code_platform_django
    build: . # current Dockerfile
    command: >
      bash -c "python manage.py makemigrations &&
       python manage.py migrate && 
       gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./code-platform:/app
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  celery:
    container_name: code_platform_celery
    build: . # TODO 
    env_file:
      - .env
    volumes:
      - ./code-platform:/app
    command: >
      bash -c "celery -A config worker -l INFO"
    depends_on:
      - django
      - rabbitmq
